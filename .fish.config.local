abbr -a f "ffmpeg -hide_banner"
abbr -a ffmpeg "ffmpeg -hide_banner"
abbr -a plotbitrate "/opt/anaconda3/envs/python3.10/bin/python3 /Users/zli/test/plotbitratefaster.py"

# Change input source of the main display to HDMI-1
#
if command -v ddcctl > /dev/null
    abbr -a hdmi1 'ddcctl -d 1 -i 17'
else
    echo "Error: No ddcctl command"
end

# Enable or disable Microsoft Auto Update
#
abbr -a disablemsupdate "sudo bash /Library/Application Support/Microsoft/MAU2.0/rm_permission.sh"
abbr -a enablemsupdate "sudo bash /Library/Application Support/Microsoft/MAU2.0/revert.sh"

# Network configuration: only works under Wi-Fi
#
abbr -a disablev6 "networksetup -setv6off Wi-Fi"
abbr -a enablev6 "networksetup -setv6automatic Wi-Fi"

# Setup ip and port number for HTTP(S) and Socks5 proxy
#
# networksetup -setwebproxy "Wi-Fi" 127.0.0.1 8888 # HTTP proxy
# networksetup -setsecurewebproxy "Wi-Fi" 127.0.0.1 8888 # HTTPS proxy
# networksetup -setsocksfirewallproxy "Wi-Fi" 127.0.0.1 8888 # SOCKS5 proxy

# Quickly toggle HTTP(S) and Socks5 proxy
#
abbr -a enableallproxy "networksetup -setwebproxystate \"Wi-Fi\" on
networksetup -setsocksfirewallproxystate \"Wi-Fi\" on
networksetup -setsecurewebproxystate \"Wi-Fi\" on
"
abbr -a disableallproxy "networksetup -setwebproxystate \"Wi-Fi\" off
networksetup -setsocksfirewallproxystate \"Wi-Fi\" off
networksetup -setsecurewebproxystate \"Wi-Fi\" off
"

abbr -a getallproxy "networksetup -getwebproxy Wi-Fi"

# vim mode for fish pretier prompt
#
function fish_mode_prompt --description 'Displays the current mode'
    # Do nothing if not in vi mode
    if test "$fish_key_bindings" = "fish_vi_key_bindings"
        switch $fish_bind_mode
            case default
                set_color --bold red
                echo 🅽
            case insert
                set_color --bold green
                echo 🅸
            case replace-one
                set_color --bold green
                echo 🆁
            case visual
                set_color --bold brmagenta
                echo 🆅
        end
        set_color normal
        printf " "
    end
end

# using 'pl' performs `proxychains4 (last-command)` on macOS
#
function pl
    echo "proxychains4 $history[1]"
    echo ""
    eval command proxychains4 $history[1]
end


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
eval /opt/anaconda3/bin/conda "shell.fish" "hook" $argv | source
# <<< conda initialize <<<

# proxychains on macos is proxychains4
#
abbr -a pc proxychains4

# macos using brew install llvm to install clangd
# 
export PATH="/usr/local/opt/llvm/bin:$PATH"

# cargo
#
export PATH="$HOME/.cargo/bin:$PATH"

# golang
# 
export GOPATH="$HOME/go"
export PATH="$PATH:$GOPATH/bin"

# maven
#
export PATH="/Users/zli/.maven/apache-maven-3.8.1/bin:$PATH"

# dx binary in Android SDK
#
export PATH="/Users/zli/Library/Android/sdk/build-tools/30.0.2:$PATH"
export PATH="/Users/zli/Library/Android/sdk/platform-tools:$PATH"

# basictex
#
export PATH="/Library/TeX/texbin/:$PATH"

# android
#
export ANDROID_NDK="/Users/zli/Library/Android/sdk/ndk/23.1.7779620"
export ANDROID_SDK="/Users/zli/Library/Android/sdk/"
export ANDROID_SDK_ROOT="/Users/zli/Library/Android/sdk/"

# set -x JAVA_HOME (/usr/libexec/java_home -v 1.8)

# autojump
#
[ -f /usr/local/share/autojump/autojump.fish ]; and source /usr/local/share/autojump/autojump.fish

# set terminal installed things with EN-lang
# https://stackoverflow.com/questions/14189134/how-to-change-git-from-chinese-to-english-in-mac
#
export LC_ALL=en_US.UTF-8

export PATH="/usr/local/opt/binutils/bin:$PATH"
